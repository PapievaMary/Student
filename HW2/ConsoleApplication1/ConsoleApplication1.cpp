// ConsoleApplication1.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <Windows.h>


int main() //Лабораторная работа 2
{
    using namespace std;
    //setlocale(LC_ALL, ""); 
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int x = 5, y = 1, z = 10;
    //2. Выведите в консоль результат: суммы, разности, произведения и деления.
    cout <<" x = 1, y = 5, z = 10\n Результат: x+y+z=" << x + y + z << "\n";
    cout << " Результат: z-x-y=" << z - x - y << "\n";
    cout << " Результат: x*y*z=" << x * y * z << "\n";
    cout << " Результат: z/x/y=" << z / x / y << "\n";
    cout << " Остаток от деления x на y = " << x % y << "\n"; 
    cout << " (((145 - 100 / 20) / 20) * 50) + 45 = " << (((145 - 100 / 20) / 20) * 50) + 45 << "\n";
    int a = 3, b = 7;
    //6. Выполните между ними следующие операции: &, |, ^, - их результат запишите в новые переменные.
    auto c = a & b, d = a | b, f = a ^ b;
    //7. С первой переменной сделайте дополнительно следующие операции: ~, >> 1, << 1. Результат так же запишите в переменные.
    auto q = ~a, w = 3 >> 1, e = a << 1;
    cout << " a = " << a << "\n";
    cout << " b = " << b << "\n";
    cout << " c = " << c << "\n";
    cout << " d = " << d << "\n";
    cout << " f = " << f << "\n";
    cout << " q = " << q << "\n";
    cout << " w = " << w << "\n";
    cout << " e = " << e << "\n";
    bool b1 = true, b2 = false;
    bool b3 = (b1 && (b1 && b1 || b2) && (b2 || b1 != b2));
    cout << " b3 = " << b3 << "\n";
    bool b4 = 25 < 48 && (23 > (3 + 15) || (2 < 8 && (5 >= 2 && 15 < 15)));
    cout << " 25 < 48 && (23 > (3 + 15) || (2 < 8 && (5 >= 2 && 15 < 15))) = " << b4 << "\n";
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
